import{_ as c,c as r,f as p,b as i,e as s,r as d,o as u,d as a,a as e}from"./app-CBFKTYkr.js";const h={};function k(g,t){const l=d("CodeTabs");return u(),r("div",null,[t[14]||(t[14]=p(`<h1 id="soldier-attributes" tabindex="-1"><a class="header-anchor" href="#soldier-attributes"><span>Soldier Attributes</span></a></h1><p>Properties define various attributes and behaviors of a soldier when they hold or use a specific item. Each property has a unique key and an associated value that dictates its effect on the soldier. Below is a detailed breakdown of each property:</p><h2 id="damage" tabindex="-1"><a class="header-anchor" href="#damage"><span>Damage</span></a></h2><p>This property increases the damage dealt by the soldier. The key is <code>&quot;damage&quot;</code>, and the value can be any number. The default value is <code>0</code>.</p><div class="language-json" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token property">&quot;damage&quot;</span><span class="token operator">:</span> <span class="token number">1.25</span></span>
<span class="line"></span></code></pre></div><h2 id="attack-range" tabindex="-1"><a class="header-anchor" href="#attack-range"><span>Attack Range</span></a></h2><p>Increases the soldier&#39;s attack range. The key is <code>&quot;attack_range&quot;</code> and the value can be any <code>number</code>. The default value is <code>0</code></p><div class="language-json" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token property">&quot;attack_range&quot;</span><span class="token operator">:</span> <span class="token number">0.1</span></span>
<span class="line"></span></code></pre></div><h2 id="throwable" tabindex="-1"><a class="header-anchor" href="#throwable"><span>Throwable</span></a></h2><p>Indicates whether the item can be thrown by the soldier. The key is <code>&quot;throwable&quot;</code>, and possible values include:</p><table><thead><tr><th>Name</th><th>Json</th><th>Description</th></tr></thead><tbody><tr><td><code>None</code></td><td><code>&quot;none&quot;</code></td><td>This <code>Item</code>cannot be thrown</td></tr><tr><td><code>Harmfull</code></td><td><code>&quot;harmful&quot;</code></td><td>This <code>Item</code>can only be thrown at enemies</td></tr><tr><td><code>Helping</code></td><td><code>&quot;helping&quot;</code></td><td>This <code>Item</code>can only be thrown at allies</td></tr></tbody></table><p>If the item is throwable, the damage is affected by the <a href="#damage">Damage</a> property, and it can also apply <a href="#set-on-fire">Set on Fire</a> and <a href="#special-attacks-and-counter-attacks">Special Ranged Attacks</a>.</p><p>The default value is <code>None</code></p><div class="language-json" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token property">&quot;throwable&quot;</span><span class="token operator">:</span> <span class="token string">&quot;harmful&quot;</span></span>
<span class="line"></span></code></pre></div><div class="hint-container important"><p class="hint-container-title">Important</p><p>For items with <code>Helping</code> as the throwable value, make sure to set the <a href="#attack-type"><code>AttackType</code></a> to <code>Support</code> otherwise, the soldier wonâ€™t be able to target allies correctly.</p></div><h2 id="protection" tabindex="-1"><a class="header-anchor" href="#protection"><span>Protection</span></a></h2><p>Increases the armor value of the soldier. The key is <code>&quot;protection&quot;</code>, and the value can be any positive number. The default value is <code>0</code>.</p><div class="language-json" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token property">&quot;protection&quot;</span><span class="token operator">:</span> <span class="token number">1.3</span></span>
<span class="line"></span></code></pre></div><h2 id="explosion-resistance" tabindex="-1"><a class="header-anchor" href="#explosion-resistance"><span>Explosion Resistance</span></a></h2><p>Increases the resistance against explosions of the soldier. The key is <code>&quot;explosion_resistance&quot;</code>, and the value can be any positive number. The default value is <code>0</code>.</p><div class="language-json" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token property">&quot;explosion_resistance&quot;</span><span class="token operator">:</span> <span class="token number">14.3</span></span>
<span class="line"></span></code></pre></div><h2 id="heavy" tabindex="-1"><a class="header-anchor" href="#heavy"><span>Heavy</span></a></h2><p>Increases the armor of toughness the Soldier. The key is <code>&quot;heavy&quot;</code> and the value can be any number. The default value is <code>0</code></p><div class="language-json" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token property">&quot;heavy&quot;</span><span class="token operator">:</span> <span class="token number">2.0</span></span>
<span class="line"></span></code></pre></div><h2 id="damage-block" tabindex="-1"><a class="header-anchor" href="#damage-block"><span>Damage Block</span></a></h2><p>This property allows the soldier to block a certain amount of damage received. The key is <code>&quot;damage_block&quot;</code>. It consists of the damage amount to block, a chance of blocking, and an optional &quot;pierceable&quot; flag.</p><div class="language-json" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token property">&quot;damage_block&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;amount&quot;</span><span class="token operator">:</span> <span class="token number">2.0</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;chance&quot;</span><span class="token operator">:</span> <span class="token number">0.5</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><h2 id="set-on-fire" tabindex="-1"><a class="header-anchor" href="#set-on-fire"><span>Set on fire</span></a></h2><p>Ignites the target on attack. The key is <code>&quot;set_on_fire&quot;</code> and the value can be any positive whole number representing the duration in ticks. The default value is <code>0</code>.</p><div class="language-json" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token property">&quot;set_on_fire&quot;</span><span class="token operator">:</span> <span class="token number">1</span></span>
<span class="line"></span></code></pre></div><h2 id="see-invisibility" tabindex="-1"><a class="header-anchor" href="#see-invisibility"><span>See Invisibility</span></a></h2><p>Determines whether the soldier can see invisible enemies. The key is <code>&quot;see_invisibility&quot;</code>, and the value can be <code>true</code> or <code>{}</code>. There is no default value as this property is active when present otherwise not.</p><div class="language-json" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token property">&quot;see_invisibility&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span></span>
<span class="line"></span></code></pre></div><h2 id="can-swim" tabindex="-1"><a class="header-anchor" href="#can-swim"><span>Can Swim</span></a></h2><p>Indicates whether the soldier can swim. The key is <code>&quot;can_swim&quot;</code> and the value can be any <code>true</code> or <code>{}</code>. There is no default value as this property is active when present otherwise not.</p><div class="language-json" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token property">&quot;can_swim&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span></span>
<span class="line"></span></code></pre></div><h2 id="gliding" tabindex="-1"><a class="header-anchor" href="#gliding"><span>Gliding</span></a></h2><p>Enables the soldier to glide, preventing fall damage. The key is <code>&quot;glide&quot;</code> and the value can be any <code>true</code> or <code>{}</code>. There is no default value as this property is active when present otherwise not.</p><div class="language-json" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token property">&quot;glide&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span></span>
<span class="line"></span></code></pre></div><div class="hint-container info"><p class="hint-container-title">Info</p><p>For visual gliding effect the item needs to be a <a href="./items#creating-an-accessory">Gliding Accessory</a></p></div><h2 id="invisible" tabindex="-1"><a class="header-anchor" href="#invisible"><span>Invisible</span></a></h2><p>Makes the soldier invisible. The key is <code>&quot;invisible&quot;</code> and the value can be any <code>true</code> or <code>{}</code>. There is no default value as this property is active when present otherwise not.</p><div class="language-json" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token property">&quot;invisible&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span></span>
<span class="line"></span></code></pre></div><h2 id="glowing" tabindex="-1"><a class="header-anchor" href="#glowing"><span>Glowing</span></a></h2><p>Determines if the soldier emits light, making it glow in dark areas. The key is <code>&quot;glowing&quot;</code> and the value can be any <code>true</code> or <code>{}</code>. There is no default value as this property is active when present otherwise not.</p><div class="language-json" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token property">&quot;glowing&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span></span>
<span class="line"></span></code></pre></div><h2 id="glow-outline" tabindex="-1"><a class="header-anchor" href="#glow-outline"><span>Glow Outline</span></a></h2><p>Adds a glowing outline around the soldier, similar to the &quot;Glowing&quot; effect. The key is <code>&quot;glow_outline&quot;</code> and the value can be any <code>true</code> or <code>{}</code>. There is no default value as this property is active when present otherwise not.</p><div class="language-json" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token property">&quot;glow_outline&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span></span>
<span class="line"></span></code></pre></div><h2 id="teleport-to-owner" tabindex="-1"><a class="header-anchor" href="#teleport-to-owner"><span>Teleport to Owner</span></a></h2><p>If ths Soldier is loyal to a player it can now teleport to it. The key is <code>&quot;teleport_to_owner&quot;</code> and the value can be any <code>true</code> or <code>{}</code>. There is no default value as this property is active when present otherwise not.</p><div class="language-json" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token property">&quot;teleport_to_owner&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span></span>
<span class="line"></span></code></pre></div><h2 id="teleportation" tabindex="-1"><a class="header-anchor" href="#teleportation"><span>Teleportation</span></a></h2><p>Teleportation allows the Soldier to teleport to any target that is attacking it, to teleport away from any danger. The key is <code>&quot;teleportation&quot;</code> and the value can be any <code>true</code> or <code>{}</code>. There is no default value as this property is active when present otherwise not.</p><div class="language-json" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token property">&quot;teleportation&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span></span>
<span class="line"></span></code></pre></div><h2 id="evacuation-property" tabindex="-1"><a class="header-anchor" href="#evacuation-property"><span>Evacuation Property</span></a></h2><p>The evacuation property allows the soldier to escape from any danger in a stylish fashion. The property is triggered when the soldier health falls below one third of its max health. The key is <code>&quot;evacuation&quot;</code>. The possible values are as follows:</p><table><thead><tr><th>Name</th><th>Json</th><th>Value</th></tr></thead><tbody><tr><td><code>None</code></td><td><code>&quot;none&quot;</code></td><td>Nothing Special</td></tr><tr><td><code>Firework</code></td><td><code>&quot;firework&quot;</code></td><td>Allows the soldier to escape riding a firework rocket</td></tr></tbody></table><div class="language-json" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token property">&quot;evacuation&quot;</span><span class="token operator">:</span> <span class="token string">&quot;firework&quot;</span></span>
<span class="line"></span></code></pre></div><h2 id="breath-hold" tabindex="-1"><a class="header-anchor" href="#breath-hold"><span>Breath Hold</span></a></h2><p>Specifies the time a soldier can hold its breath underwater. The key is <code>&quot;breath_hold&quot;</code> and the value is a whole number. There are predefined values</p><table><thead><tr><th>Name</th><th>Json</th><th>Value</th></tr></thead><tbody><tr><td><code>None</code></td><td><code>&quot;none&quot;</code></td><td>Soldier cannot breathe underwater at all</td></tr><tr><td><code>Normal</code></td><td><code>&quot;normal&quot;</code></td><td>Default breath-holding time</td></tr><tr><td><code>Inifine</code></td><td><code>&quot;infinite&quot;</code></td><td>Soldier can hold its breath indefinitely</td></tr></tbody></table>`,62)),i(l,{id:"286",data:[{id:"Number"},{id:"Predefined"}],"tab-id":"breath-hold-examples"},{title0:s(({value:n,isActive:o})=>t[0]||(t[0]=[a("Number")])),title1:s(({value:n,isActive:o})=>t[1]||(t[1]=[a("Predefined")])),tab0:s(({value:n,isActive:o})=>t[2]||(t[2]=[e("div",{class:"language-json","data-highlighter":"prismjs","data-ext":"json","data-title":"json"},[e("pre",null,[e("code",null,[e("span",{class:"line"},[e("span",{class:"token property"},'"breath_hold"'),e("span",{class:"token operator"},":"),a(),e("span",{class:"token number"},"35")]),a(`
`),e("span",{class:"line"})])])],-1)])),tab1:s(({value:n,isActive:o})=>t[3]||(t[3]=[e("div",{class:"language-json","data-highlighter":"prismjs","data-ext":"json","data-title":"json"},[e("pre",null,[e("code",null,[e("span",{class:"line"},[e("span",{class:"token property"},'"breath_hold"'),e("span",{class:"token operator"},":"),a(),e("span",{class:"token string"},'"infinite"')]),a(`
`),e("span",{class:"line"})])])],-1)])),_:1}),t[15]||(t[15]=p(`<h2 id="size" tabindex="-1"><a class="header-anchor" href="#size"><span>Size</span></a></h2><p>Modifies the size of the soldier. The key is <code>&quot;size&quot;</code> and the value can be any <code>positive number</code>. The default value is <code>1.0</code>. The maximum size increase any soldier can have is <code>3.0</code>.</p><div class="language-json" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token property">&quot;size&quot;</span><span class="token operator">:</span> <span class="token number">2.35</span></span>
<span class="line"></span></code></pre></div><h2 id="death-explosion" tabindex="-1"><a class="header-anchor" href="#death-explosion"><span>Death Explosion</span></a></h2><p>Defines the explosion power when a soldier dies. The key is <code>&quot;death_exploder&quot;</code> and the value can be any <code>positive number</code>. The default value is <code>0.0</code>.</p><div class="language-json" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token property">&quot;counter_attack&quot;</span><span class="token operator">:</span> <span class="token number">1.1</span></span>
<span class="line"></span></code></pre></div><h2 id="death-cloud" tabindex="-1"><a class="header-anchor" href="#death-cloud"><span>Death Cloud</span></a></h2><p>Spawns an Area Effect Cloud when the soldier dies. The key is <code>&quot;death_cloud&quot;</code>. It can accept a single death cloud or a list of them. Each cloud can have an effect, amplifier, and duration.</p>`,8)),i(l,{id:"314",data:[{id:"Single"},{id:"Multiple"}],"tab-id":"json"},{title0:s(({value:n,isActive:o})=>t[4]||(t[4]=[a("Single")])),title1:s(({value:n,isActive:o})=>t[5]||(t[5]=[a("Multiple")])),tab0:s(({value:n,isActive:o})=>t[6]||(t[6]=[e("div",{class:"language-json","data-highlighter":"prismjs","data-ext":"json","data-title":"json"},[e("pre",null,[e("code",null,[e("span",{class:"line"},[e("span",{class:"token property"},'"death_cloud"'),e("span",{class:"token operator"},":"),a(),e("span",{class:"token punctuation"},"{")]),a(`
`),e("span",{class:"line"},[a("  "),e("span",{class:"token property"},'"amplifier"'),e("span",{class:"token operator"},":"),a(),e("span",{class:"token number"},"1"),e("span",{class:"token punctuation"},",")]),a(`
`),e("span",{class:"line"},[a("  "),e("span",{class:"token property"},'"duration"'),e("span",{class:"token operator"},":"),a(),e("span",{class:"token number"},"30"),e("span",{class:"token punctuation"},",")]),a(`
`),e("span",{class:"line"},[a("  "),e("span",{class:"token property"},'"effect"'),e("span",{class:"token operator"},":"),a(),e("span",{class:"token string"},'"minecraft:poison"')]),a(`
`),e("span",{class:"line"},[e("span",{class:"token punctuation"},"}")]),a(`
`),e("span",{class:"line"})])])],-1)])),tab1:s(({value:n,isActive:o})=>t[7]||(t[7]=[e("div",{class:"language-json","data-highlighter":"prismjs","data-ext":"json","data-title":"json"},[e("pre",null,[e("code",null,[e("span",{class:"line"},[e("span",{class:"token property"},'"death_cloud"'),e("span",{class:"token operator"},":"),a(),e("span",{class:"token punctuation"},"[")]),a(`
`),e("span",{class:"line"},[a("  "),e("span",{class:"token punctuation"},"{")]),a(`
`),e("span",{class:"line"},[a("    "),e("span",{class:"token property"},'"amplifier"'),e("span",{class:"token operator"},":"),a(),e("span",{class:"token number"},"2"),e("span",{class:"token punctuation"},",")]),a(`
`),e("span",{class:"line"},[a("    "),e("span",{class:"token property"},'"duration"'),e("span",{class:"token operator"},":"),a(),e("span",{class:"token number"},"1"),e("span",{class:"token punctuation"},",")]),a(`
`),e("span",{class:"line"},[a("    "),e("span",{class:"token property"},'"effect"'),e("span",{class:"token operator"},":"),a(),e("span",{class:"token string"},'"minecraft:instant_damage"')]),a(`
`),e("span",{class:"line"},[a("  "),e("span",{class:"token punctuation"},"}"),e("span",{class:"token punctuation"},",")]),a(`
`),e("span",{class:"line"},[a("  "),e("span",{class:"token punctuation"},"{")]),a(`
`),e("span",{class:"line"},[a("    "),e("span",{class:"token property"},'"amplifier"'),e("span",{class:"token operator"},":"),a(),e("span",{class:"token number"},"2"),e("span",{class:"token punctuation"},",")]),a(`
`),e("span",{class:"line"},[a("    "),e("span",{class:"token property"},'"duration"'),e("span",{class:"token operator"},":"),a(),e("span",{class:"token number"},"100"),e("span",{class:"token punctuation"},",")]),a(`
`),e("span",{class:"line"},[a("    "),e("span",{class:"token property"},'"effect"'),e("span",{class:"token operator"},":"),a(),e("span",{class:"token string"},'"minecraft:weakness"')]),a(`
`),e("span",{class:"line"},[a("  "),e("span",{class:"token punctuation"},"}")]),a(`
`),e("span",{class:"line"},[e("span",{class:"token punctuation"},"]")]),a(`
`),e("span",{class:"line"})])])],-1)])),_:1}),t[16]||(t[16]=p(`<h2 id="attributes" tabindex="-1"><a class="header-anchor" href="#attributes"><span>Attributes</span></a></h2><p>Defines a set of attributes for the item The key is <code>&quot;attributes&quot;</code>. Contains a list of <code>Attributes</code> that consist of an Identifier and a Modifier. A Modifier consist of an amount, an id, and an operation. The amount can be any <code>number</code>, the id should be unique to this <code>Item</code> all in lower case, underscores instead of spaces. Optionally it can be prefixed with <code>&quot;modid:&quot;</code>.</p><table><thead><tr><th>Name</th><th>Json Key</th><th>Value</th></tr></thead><tbody><tr><td><code>Add Value</code></td><td><code>&quot;add_value&quot;</code></td><td>Adds a flat value</td></tr><tr><td><code>Multiplie Base</code></td><td><code>&quot;add_multiplied_base&quot;</code></td><td>Multiplies the base value</td></tr><tr><td><code>Multiplie Total</code></td><td><code>&quot;add_multiplied_total&quot;</code></td><td>Multiplies the total value</td></tr></tbody></table><div class="language-json" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token property">&quot;attributes&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;minecraft:generic.max_health&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;amount&quot;</span><span class="token operator">:</span> <span class="token number">30.0</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;soldier_com_health&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    operation<span class="token string">&quot;: &quot;</span>add_value&quot;</span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;minecraft:generic.movement_speed&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;amount&quot;</span><span class="token operator">:</span> <span class="token number">-0.2</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;unique_name_slow&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;operation&quot;</span><span class="token operator">:</span> <span class="token string">&quot;add_multiplied_total&quot;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><h2 id="immunity-and-persistence" tabindex="-1"><a class="header-anchor" href="#immunity-and-persistence"><span>Immunity and Persistence</span></a></h2><p>Determines whether a soldier is immune to a certain effect or if the effect cannot be removed.</p><p>The key is <code>&quot;immunity&quot;</code>. The value is a Map with the effect and type.</p><table><thead><tr><th>Name</th><th>Json Key</th></tr></thead><tbody><tr><td><code>Immuner</code></td><td><code>&quot;immune&quot;</code></td></tr><tr><td><code>Persitent</code></td><td><code>&quot;persistent&quot;</code></td></tr></tbody></table><div class="language-json" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token property">&quot;immunity&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;minecraft:poison&quot;</span><span class="token operator">:</span> <span class="token string">&quot;immune&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;minecraft:regeneration&quot;</span><span class="token operator">:</span> <span class="token string">&quot;persistent&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;minecraft:weakness&quot;</span><span class="token operator">:</span> <span class="token string">&quot;immune&quot;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><h2 id="attack-type" tabindex="-1"><a class="header-anchor" href="#attack-type"><span>Attack Type</span></a></h2><p>Describes the soldierâ€™s attack behavior. The key is <code>attack_type</code> and the default value is <code>Normal</code>.</p><table><thead><tr><th>Name</th><th>Json</th><th>Description</th></tr></thead><tbody><tr><td><code>Normal</code></td><td><code>&quot;normal&quot;</code></td><td>This is normal attack behaviour of soldiers. Nothing special.</td></tr><tr><td><code>Pacifist</code></td><td><code>&quot;pacifist&quot;</code></td><td>Soldier doesn&#39;t attack. However they can do work now.</td></tr><tr><td><code>Agressive</code></td><td><code>&quot;agressive&quot;</code></td><td>Soldier attacks everyone, even team members</td></tr><tr><td><code>Support</code></td><td><code>&quot;support&quot;</code></td><td>Canâ€™t attack, but helps allied</td></tr><tr><td><code>King</code></td><td><code>&quot;king&quot;</code></td><td>Commands other soldiers to attack the same target.</td></tr><tr><td><code>Queen</code></td><td><code>&quot;queen&quot;</code></td><td>Other soldiers will try to protect the Queen.</td></tr><tr><td><code>Zombie</code></td><td><code>&quot;zombie&quot;</code></td><td>Behaves like a zombie</td></tr><tr><td><code>Vampire</code></td><td><code>&quot;vampire&quot;</code></td><td>Behaves like a vampire</td></tr></tbody></table><p>The <code>King</code> and <code>Queen</code> attack types will cause the soldier to attack rival kings or queens of the same team.</p><div class="language-json" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token property">&quot;attack_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;support&quot;</span></span>
<span class="line"></span></code></pre></div><div class="hint-container info"><p class="hint-container-title">Info</p><p>The <code>AttackType</code> <code>Zombie</code>/<code>Vampire</code>does not turn a Soldier into a Zombie/Vampire</p></div><h2 id="revive-property" tabindex="-1"><a class="header-anchor" href="#revive-property"><span>Revive Property</span></a></h2><p>This property allows a soldier to revive other fallen soldiers. The key is <code>&quot;revive_other&quot;</code>. The Value has a <code>type</code>, a <code>priority</code>, a <code>chance</code>and a <code>cooldown</code>. The possible types are as follows:</p><table><thead><tr><th>Name</th><th>Json Key</th><th>Description</th></tr></thead><tbody><tr><td><code>None</code></td><td><code>&quot;none&quot;</code></td><td>No revive.</td></tr><tr><td><code>Necrotic</code></td><td><code>&quot;necrotic&quot;</code></td><td>Revive a curable Zombie</td></tr><tr><td><code>Dark Necrotic</code></td><td><code>&quot;dark_necrotic&quot;</code></td><td>Revive an incurable Zombie</td></tr><tr><td><code>Medic</code></td><td><code>&quot;medic&quot;</code></td><td>Revive a burned Soldier on the same team to half health</td></tr><tr><td><code>Angel</code></td><td><code>&quot;angel&quot;</code></td><td>Revive a Soldier on the same team</td></tr><tr><td><code>Spritual</code></td><td><code>&quot;spiritual&quot;</code></td><td>Convert fallen Soldiers of the same team into Wraiths</td></tr></tbody></table><p>The <code>priority</code> is a whole number dictates in which order revives are attempted. The <code>chance</code> determines the likelihood of a successful revival and the <code>cooldown</code> is a non-negative number specifies how long the soldier must wait before reviving again</p><div class="language-json" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token property">&quot;revive_other&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;necrotic&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;chance&quot;</span><span class="token operator">:</span> <span class="token number">0.5</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;cooldown&quot;</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;priority&quot;</span><span class="token operator">:</span> <span class="token number">1</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><h2 id="special-attacks-and-counter-attacks" tabindex="-1"><a class="header-anchor" href="#special-attacks-and-counter-attacks"><span>Special Attacks and Counter Attacks</span></a></h2><p>Special attacks are triggered when a soldier attacks. Counter-attacks activate when the soldier is attacked. These properties can either be a single effect or a list of effects.</p><p>The key is <code>&quot;special_attack&quot;</code> for single effect or <code>&quot;special_attacks&quot;</code> for multiplier effects. For counter-attacks, use <code>&quot;counter_attack&quot;</code> or <code>&quot;counter_attacks&quot;</code>.</p><p>All effects have a <code>Type</code> and the possible <code>Types</code> are as follows:</p><table><thead><tr><th>Name</th><th>Json</th><th>Description</th><th>Additional Values</th></tr></thead><tbody><tr><td><code>Thorns</code></td><td><code>&quot;thorns&quot;</code></td><td>75% Chance to do the bonus damage</td><td>-</td></tr><tr><td><code>Sneek Attack</code></td><td><code>&quot;sneak_attack&quot;</code></td><td>Deals bonus damage when the user is invisible</td><td>-</td></tr><tr><td><code>Lightning</code></td><td><code>&quot;lightning_attack&quot;</code></td><td>Strikes a lightning on use</td><td>-</td></tr><tr><td><code>Effect</code></td><td><code>&quot;effect&quot;</code></td><td>Applies an MobEffect when used</td><td>effect, duration, amplifier</td></tr><tr><td><code>Critical Hit</code></td><td><code>&quot;critical_hit&quot;</code></td><td>Chance to deal bonus damage</td><td>chance</td></tr><tr><td><code>Smite</code></td><td><code>&quot;smite&quot;</code></td><td>Bonus damage to Undead Mobs and cures zombies and vampires of the same team</td><td>-</td></tr></tbody></table><p><code>Attack Properties</code> always hava an <code>Attack Type</code> and <code>Damage</code>.</p><p>Possible <code>Attack Types</code> are:</p><table><thead><tr><th>Name</th><th>Json</th><th>Description</th></tr></thead><tbody><tr><td><code>Melee</code></td><td><code>&quot;melee&quot;</code></td><td>For Melee (Counter) Attacks</td></tr><tr><td><code>Ranged</code></td><td><code>&quot;ranged&quot;</code></td><td>For Ranged (Counter) Attacks</td></tr><tr><td><code>Melee and Ranged</code></td><td><code>&quot;melee_and_ranged&quot;</code></td><td>For both</td></tr></tbody></table>`,28)),i(l,{id:"804",data:[{id:"Special Attack"},{id:"Special Attacks"},{id:"Counter Attack"}],"tab-id":"json"},{title0:s(({value:n,isActive:o})=>t[8]||(t[8]=[a("Special Attack")])),title1:s(({value:n,isActive:o})=>t[9]||(t[9]=[a("Special Attacks")])),title2:s(({value:n,isActive:o})=>t[10]||(t[10]=[a("Counter Attack")])),tab0:s(({value:n,isActive:o})=>t[11]||(t[11]=[e("div",{class:"language-json","data-highlighter":"prismjs","data-ext":"json","data-title":"json"},[e("pre",null,[e("code",null,[e("span",{class:"line"},[e("span",{class:"token property"},'"special_attack"'),e("span",{class:"token operator"},":"),a(),e("span",{class:"token punctuation"},"{")]),a(`
`),e("span",{class:"line"},[a("  "),e("span",{class:"token property"},'"type"'),e("span",{class:"token operator"},":"),a(),e("span",{class:"token string"},'"sneak_attack"'),e("span",{class:"token punctuation"},",")]),a(`
`),e("span",{class:"line"},[a("  "),e("span",{class:"token property"},'"attack_properties"'),e("span",{class:"token operator"},":"),a(),e("span",{class:"token punctuation"},"{")]),a(`
`),e("span",{class:"line"},[a("    "),e("span",{class:"token property"},'"attack_type"'),e("span",{class:"token operator"},":"),a(),e("span",{class:"token string"},'"melee"'),e("span",{class:"token punctuation"},",")]),a(`
`),e("span",{class:"line"},[a("      "),e("span",{class:"token property"},'"damage"'),e("span",{class:"token operator"},":"),a(),e("span",{class:"token number"},"0.5")]),a(`
`),e("span",{class:"line"},[a("    "),e("span",{class:"token punctuation"},"}")]),a(`
`),e("span",{class:"line"},[a("  "),e("span",{class:"token punctuation"},"}")]),a(`
`),e("span",{class:"line"},[e("span",{class:"token punctuation"},"}")]),a(`
`),e("span",{class:"line"})])])],-1)])),tab1:s(({value:n,isActive:o})=>t[12]||(t[12]=[e("div",{class:"language-json","data-highlighter":"prismjs","data-ext":"json","data-title":"json"},[e("pre",null,[e("code",null,[e("span",{class:"line"},[e("span",{class:"token property"},'"special_attack"'),e("span",{class:"token operator"},":"),a(),e("span",{class:"token punctuation"},"[")]),a(`
`),e("span",{class:"line"},[a("  "),e("span",{class:"token punctuation"},"{")]),a(`
`),e("span",{class:"line"},[a("    "),e("span",{class:"token property"},'"type"'),e("span",{class:"token operator"},":"),a(),e("span",{class:"token string"},'"effect"'),e("span",{class:"token punctuation"},",")]),a(`
`),e("span",{class:"line"},[a("    "),e("span",{class:"token property"},'"attack_properties"'),e("span",{class:"token operator"},":"),a(),e("span",{class:"token punctuation"},"{")]),a(`
`),e("span",{class:"line"},[a("      "),e("span",{class:"token property"},'"attack_type"'),e("span",{class:"token operator"},":"),a(),e("span",{class:"token string"},'"melee"'),e("span",{class:"token punctuation"},",")]),a(`
`),e("span",{class:"line"},[a("      "),e("span",{class:"token property"},'"amplifier"'),e("span",{class:"token operator"},":"),a(),e("span",{class:"token number"},"2"),e("span",{class:"token punctuation"},",")]),a(`
`),e("span",{class:"line"},[a("      "),e("span",{class:"token property"},'"duration"'),e("span",{class:"token operator"},":"),a(),e("span",{class:"token number"},"600"),e("span",{class:"token punctuation"},",")]),a(`
`),e("span",{class:"line"},[a("      "),e("span",{class:"token property"},'"effect"'),e("span",{class:"token operator"},":"),a(),e("span",{class:"token string"},'"minecraft:blindness"')]),a(`
`),e("span",{class:"line"},[a("    "),e("span",{class:"token punctuation"},"}")]),a(`
`),e("span",{class:"line"},[a("  "),e("span",{class:"token punctuation"},"}"),e("span",{class:"token punctuation"},",")]),a(`
`),e("span",{class:"line"},[a("  "),e("span",{class:"token punctuation"},"{")]),a(`
`),e("span",{class:"line"},[a("    "),e("span",{class:"token property"},'"type"'),e("span",{class:"token operator"},":"),a(),e("span",{class:"token string"},'"critical_hit"'),e("span",{class:"token punctuation"},",")]),a(`
`),e("span",{class:"line"},[a("    "),e("span",{class:"token property"},'"attack_properties"'),e("span",{class:"token operator"},":"),a(),e("span",{class:"token punctuation"},"{")]),a(`
`),e("span",{class:"line"},[a("      "),e("span",{class:"token property"},'"attack_type"'),e("span",{class:"token operator"},":"),a(),e("span",{class:"token string"},'"ranged"'),e("span",{class:"token punctuation"},",")]),a(`
`),e("span",{class:"line"},[a("      "),e("span",{class:"token property"},'"damage"'),e("span",{class:"token operator"},":"),a(),e("span",{class:"token number"},"2.0"),e("span",{class:"token punctuation"},",")]),a(`
`),e("span",{class:"line"},[a("      "),e("span",{class:"token property"},'"chance"'),e("span",{class:"token operator"},":"),a(),e("span",{class:"token number"},"0.25")]),a(`
`),e("span",{class:"line"},[a("    "),e("span",{class:"token punctuation"},"}")]),a(`
`),e("span",{class:"line"},[a("  "),e("span",{class:"token punctuation"},"}")]),a(`
`),e("span",{class:"line"},[e("span",{class:"token punctuation"},"]")]),a(`
`),e("span",{class:"line"})])])],-1)])),tab2:s(({value:n,isActive:o})=>t[13]||(t[13]=[e("div",{class:"language-json","data-highlighter":"prismjs","data-ext":"json","data-title":"json"},[e("pre",null,[e("code",null,[e("span",{class:"line"},[e("span",{class:"token property"},'"counter_attack"'),e("span",{class:"token operator"},":"),a(),e("span",{class:"token punctuation"},"{")]),a(`
`),e("span",{class:"line"},[a("  "),e("span",{class:"token property"},'"type"'),e("span",{class:"token operator"},":"),a(),e("span",{class:"token string"},'"thorns"'),e("span",{class:"token punctuation"},",")]),a(`
`),e("span",{class:"line"},[a("  "),e("span",{class:"token property"},'"attack_properties"'),e("span",{class:"token operator"},":"),a(),e("span",{class:"token punctuation"},"{")]),a(`
`),e("span",{class:"line"},[a("    "),e("span",{class:"token property"},'"attack_type"'),e("span",{class:"token operator"},":"),a(),e("span",{class:"token string"},'"melee_and_ranged"'),e("span",{class:"token punctuation"},",")]),a(`
`),e("span",{class:"line"},[a("    "),e("span",{class:"token property"},'"damage"'),e("span",{class:"token operator"},":"),a(),e("span",{class:"token number"},"1.0")]),a(`
`),e("span",{class:"line"},[a("  "),e("span",{class:"token punctuation"},"}")]),a(`
`),e("span",{class:"line"},[e("span",{class:"token punctuation"},"}")]),a(`
`),e("span",{class:"line"})])])],-1)])),_:1}),t[17]||(t[17]=p(`<h2 id="wraith" tabindex="-1"><a class="header-anchor" href="#wraith"><span>Wraith</span></a></h2><p>his property allows a soldier to turn into a wraith on death, haunting others. The key is <code>&quot;wraith&quot;</code>. The Value consist of a duration, an optional field of damage and an optional list of <a href="#special-attacks-and-counter-attacks">Special Attacks</a></p><div class="language-json" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token property">&quot;wraith&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;attack_effect&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;csr:smite&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;attack_properties&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token property">&quot;attack_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;melee&quot;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token property">&quot;damage&quot;</span><span class="token operator">:</span> <span class="token number">1.0</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;duration&quot;</span><span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;damage&quot;</span><span class="token operator">:</span> <span class="token number">1.1</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><div class="hint-container important"><p class="hint-container-title">Important</p><p>Only <code>Melee</code> and <code>Melee and Ranged</code> special attacks will be used.</p></div>`,4))])}const v=c(h,[["render",k],["__file","soldier-properties.html.vue"]]),b=JSON.parse('{"path":"/create-items/soldier-properties.html","title":"Soldier Attributes","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Damage","slug":"damage","link":"#damage","children":[]},{"level":2,"title":"Attack Range","slug":"attack-range","link":"#attack-range","children":[]},{"level":2,"title":"Throwable","slug":"throwable","link":"#throwable","children":[]},{"level":2,"title":"Protection","slug":"protection","link":"#protection","children":[]},{"level":2,"title":"Explosion Resistance","slug":"explosion-resistance","link":"#explosion-resistance","children":[]},{"level":2,"title":"Heavy","slug":"heavy","link":"#heavy","children":[]},{"level":2,"title":"Damage Block","slug":"damage-block","link":"#damage-block","children":[]},{"level":2,"title":"Set on fire","slug":"set-on-fire","link":"#set-on-fire","children":[]},{"level":2,"title":"See Invisibility","slug":"see-invisibility","link":"#see-invisibility","children":[]},{"level":2,"title":"Can Swim","slug":"can-swim","link":"#can-swim","children":[]},{"level":2,"title":"Gliding","slug":"gliding","link":"#gliding","children":[]},{"level":2,"title":"Invisible","slug":"invisible","link":"#invisible","children":[]},{"level":2,"title":"Glowing","slug":"glowing","link":"#glowing","children":[]},{"level":2,"title":"Glow Outline","slug":"glow-outline","link":"#glow-outline","children":[]},{"level":2,"title":"Teleport to Owner","slug":"teleport-to-owner","link":"#teleport-to-owner","children":[]},{"level":2,"title":"Teleportation","slug":"teleportation","link":"#teleportation","children":[]},{"level":2,"title":"Evacuation Property","slug":"evacuation-property","link":"#evacuation-property","children":[]},{"level":2,"title":"Breath Hold","slug":"breath-hold","link":"#breath-hold","children":[]},{"level":2,"title":"Size","slug":"size","link":"#size","children":[]},{"level":2,"title":"Death Explosion","slug":"death-explosion","link":"#death-explosion","children":[]},{"level":2,"title":"Death Cloud","slug":"death-cloud","link":"#death-cloud","children":[]},{"level":2,"title":"Attributes","slug":"attributes","link":"#attributes","children":[]},{"level":2,"title":"Immunity and Persistence","slug":"immunity-and-persistence","link":"#immunity-and-persistence","children":[]},{"level":2,"title":"Attack Type","slug":"attack-type","link":"#attack-type","children":[]},{"level":2,"title":"Revive Property","slug":"revive-property","link":"#revive-property","children":[]},{"level":2,"title":"Special Attacks and Counter Attacks","slug":"special-attacks-and-counter-attacks","link":"#special-attacks-and-counter-attacks","children":[]},{"level":2,"title":"Wraith","slug":"wraith","link":"#wraith","children":[]}],"git":{"updatedTime":1746885425000,"contributors":[{"name":"XcraX1","email":"lego_master@web.de","commits":1}]},"filePathRelative":"create-items/soldier-properties.md"}');export{v as comp,b as data};
