import{_ as u,c as d,f as l,a as s,d as n,b as o,e as t,r,o as k}from"./app-DEi7Rjij.js";const m={},g={class:"hint-container info"},h={class:"hint-container tip"};function y(v,a){const i=r("RouteLink"),c=r("CodeTabs");return k(),d("div",null,[a[35]||(a[35]=l(`<h1 id="custom-items" tabindex="-1"><a class="header-anchor" href="#custom-items"><span>Custom Items</span></a></h1><h2 id="creating-items-that-soldiers-can-hold" tabindex="-1"><a class="header-anchor" href="#creating-items-that-soldiers-can-hold"><span>Creating Items That Soldiers Can Hold</span></a></h2><p>To create items that soldiers can hold, you need to modify the <code>soldier_holdable.json</code> file.</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">└─ data</span>
<span class="line">   └─ <span class="token punctuation">(</span>your data pack name<span class="token punctuation">)</span></span>
<span class="line">      └─ data-maps</span>
<span class="line">        └─ item</span>
<span class="line">           └─ soldier_holdable.json</span>
<span class="line"></span></code></pre></div><p>Here&#39;s the basic structure:</p><div class="language-json" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;values&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;modid:item_name&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token comment">// For Vanilla Minecraft Items ModId is &#39;minecraft&#39;</span></span>
<span class="line">      <span class="token property">&quot;properties&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        ...</span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token property">&quot;slot&quot;</span><span class="token operator">:</span> name<span class="token punctuation">,</span>                 <span class="token comment">// Defines which slot the item is held in (e.g., mainhand or offhand)</span></span>
<span class="line">      <span class="token property">&quot;pick_priority&quot;</span><span class="token operator">:</span> number<span class="token punctuation">,</span>      <span class="token comment">// (Optional) Determines priority when soldiers pick up items</span></span>
<span class="line">      <span class="token property">&quot;drop_rate&quot;</span><span class="token operator">:</span> number<span class="token punctuation">,</span>          <span class="token comment">// (Optional) Chance that the soldier will drop the item on death</span></span>
<span class="line">      <span class="token property">&quot;predicate&quot;</span><span class="token operator">:</span> test<span class="token punctuation">,</span>            <span class="token comment">// (Optional) Conditions under which the item can be held</span></span>
<span class="line">      <span class="token property">&quot;on_pick&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">        functions...                <span class="token comment">// (Optional) Define custom functions for when the item is picked up </span></span>
<span class="line">      <span class="token punctuation">]</span></span>
<span class="line">      <span class="token property">&quot;removal_condition&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token comment">// (Optional) Define custom conditions for when the item is destroyed</span></span>
<span class="line">        ...</span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    ...</span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><div class="hint-container important"><p class="hint-container-title">Important</p><p>Ensure that your item is added to the <code>&quot;clay_soldier_holdable&quot;</code> tag, otherwise soldiers won’t pick up the item.</p><p>Putting your item under the <code>&quot;clay_soldier_weapon&quot;</code> tag, makes them swing it on attack.</p></div>`,7)),s("div",g,[a[3]||(a[3]=s("p",{class:"hint-container-title"},"Info",-1)),s("p",null,[a[1]||(a[1]=n("More details on properties and values, can be found ")),o(i,{to:"/create-items/holdable-values.html"},{default:t(()=>a[0]||(a[0]=[n("here")])),_:1}),a[2]||(a[2]=n("."))])]),a[36]||(a[36]=l(`<h2 id="example-adding-a-stick" tabindex="-1"><a class="header-anchor" href="#example-adding-a-stick"><span>Example: Adding a Stick</span></a></h2><p>Let&#39;s look at an Example. If we want soldiers to hold a stick and deal extra damage, we can define it like this:</p><div class="language-json" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;values&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;minecraft:stick&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token property">&quot;properties&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">&quot;csr:damage&quot;</span><span class="token operator">:</span> <span class="token number">2.0</span> <span class="token comment">// Increases the soldier&#39;s damage when holding a stick</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token property">&quot;slot&quot;</span><span class="token operator">:</span> <span class="token string">&quot;mainhand&quot;</span> <span class="token comment">//  The stick should be held in the main hand only </span></span>
<span class="line">      <span class="token comment">// We dont need to mention other values as we want to leave as the default value</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token comment">// Some other items...</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div>`,3)),s("div",h,[a[7]||(a[7]=s("p",{class:"hint-container-title"},"Tips",-1)),s("p",null,[a[5]||(a[5]=n("You can find more examples of ")),o(i,{to:"/create-items/example.html"},{default:t(()=>a[4]||(a[4]=[n("items")])),_:1}),a[6]||(a[6]=n(" implemented by the Clay Soldiers mod for inspiration."))])]),a[37]||(a[37]=l(`<h2 id="creating-items-that-soldiers-can-wear" tabindex="-1"><a class="header-anchor" href="#creating-items-that-soldiers-can-wear"><span>Creating Items That Soldiers Can Wear</span></a></h2><p>To create wearable items, modify the <code>soldier_wearable.json</code> file.</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">└─ data</span>
<span class="line">   └─ <span class="token punctuation">(</span>your data pack name<span class="token punctuation">)</span></span>
<span class="line">      └─ data-maps</span>
<span class="line">        └─ item</span>
<span class="line">           └─ soldier_wearable.json</span>
<span class="line"></span></code></pre></div><div class="hint-container important"><p class="hint-container-title">Important</p><p>This is only visual, all properties like protection, should be added via <a href="#creating-items-that-soldiers-can-hold">Holdable Items</a></p></div><p>Here&#39;s the basic structure:</p><div class="language-json" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;values&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;armor&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token property">&quot;slot&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">&quot;model&quot;</span><span class="token operator">:</span> id     <span class="token comment">// (Optional) The id of the armor model</span></span>
<span class="line">        <span class="token property">&quot;color&quot;</span><span class="token operator">:</span> color  <span class="token comment">// (Optional) The color model. </span></span>
<span class="line">        &quot;trims<span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">            ...         <span class="token comment">// (Opional) List of trims to apply</span></span>
<span class="line">        <span class="token punctuation">]</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;accessories&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      ...</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  ...</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><h3 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h3><p>Let&#39;s look at how we could make a Gold Ingot acts as helmet. First we create a Holdable Item, also don&#39;t forget to tag the Item:</p><details class="hint-container details"><summary>Details</summary><div class="language-json" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token property">&quot;minecraft:gold_ingot&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;properties&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;protection&quot;</span><span class="token operator">:</span> <span class="token number">1.0</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;slot&quot;</span><span class="token operator">:</span> <span class="token string">&quot;head&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div></details><p>Now we make the visuals for the item. We modify the <code>soldier_wearable.json</code></p><div class="language-json" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;values&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;minecraft:gold_ingot&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token property">&quot;armor&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">&quot;head&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">// &lt;- The Slot this Item acts as Armor</span></span>
<span class="line">          <span class="token property">&quot;model&quot;</span><span class="token operator">:</span> <span class="token string">&quot;minecraft:golden_helmet&quot;</span> <span class="token comment">// The armor model we want to copy</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">      <span class="token punctuation">}</span>  </span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    ...</span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div>`,11)),s("p",null,[a[9]||(a[9]=n("You can specify other ")),o(i,{to:"/create-items/holdable-values.html#slots"},{default:t(()=>a[8]||(a[8]=[s("code",null,"Slots",-1)])),_:1}),a[10]||(a[10]=n(" such as ")),a[11]||(a[11]=s("code",null,"head",-1)),a[12]||(a[12]=n(", ")),a[13]||(a[13]=s("code",null,"chest",-1)),a[14]||(a[14]=n(", ")),a[15]||(a[15]=s("code",null,"legs",-1)),a[16]||(a[16]=n(", ")),a[17]||(a[17]=s("code",null,"feet",-1)),a[18]||(a[18]=n(". An item can even be worn in multiple slots by adding multiple entries: Additionally we can also color armor pieces"))]),a[38]||(a[38]=l(`<div class="language-json" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token property">&quot;armor&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;chest&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;model&quot;</span><span class="token operator">:</span> <span class="token string">&quot;minecraft:leather_chestplate&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;color&quot;</span><span class="token operator">:</span> <span class="token string">&quot;#1D1D21&quot;</span> <span class="token comment">// RGB color</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;feet&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;copy_model&quot;</span><span class="token operator">:</span> <span class="token string">&quot;minecraft:leather_boots&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;color&quot;</span><span class="token operator">:</span> <span class="token number">1908001</span> <span class="token comment">// RGB color in integer format, same as (RGB 1D1D21)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><div class="hint-container info"><p class="hint-container-title">Info</p><p>Learn more about Color <a href="common-values">here</a></p></div><h3 id="adding-armor-trims" tabindex="-1"><a class="header-anchor" href="#adding-armor-trims"><span>Adding Armor Trims</span></a></h3><p>You can also add trims to armor pieces:</p>`,4)),o(c,{id:"83",data:[{id:"Suit"},{id:"Glasses"}],"tab-id":"armor-examples"},{title0:t(({value:e,isActive:p})=>a[19]||(a[19]=[n("Suit")])),title1:t(({value:e,isActive:p})=>a[20]||(a[20]=[n("Glasses")])),tab0:t(({value:e,isActive:p})=>a[21]||(a[21]=[s("div",{class:"language-json","data-highlighter":"prismjs","data-ext":"json","data-title":"json"},[s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{class:"token property"},'"chest"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("  model"),s("span",{class:"token string"},'": "'),n("minecraft"),s("span",{class:"token operator"},":"),n('chainmail_chestplate"'),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[n("  "),s("span",{class:"token property"},'"trims"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token punctuation"},"[")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("      "),s("span",{class:"token property"},'"material"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"minecraft:gold"'),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[n("      "),s("span",{class:"token property"},'"pattern"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"minecraft:shaper"')]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token punctuation"},"}"),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("      "),s("span",{class:"token property"},'"material"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"minecraft:gold"'),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[n("      "),s("span",{class:"token property"},'"pattern"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"minecraft:vex"'),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"},[n("  "),s("span",{class:"token punctuation"},"]"),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"})])])],-1)])),tab1:t(({value:e,isActive:p})=>a[22]||(a[22]=[s("div",{class:"language-json","data-highlighter":"prismjs","data-ext":"json","data-title":"json"},[s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{class:"token property"},'"head"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("  "),s("span",{class:"token property"},'"model"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"minecraft:iron_helmet"'),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[n("  "),s("span",{class:"token property"},'"trim_only"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token boolean"},"true"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token comment"},"// When set to true the armor copy will not be displayed")]),n(`
`),s("span",{class:"line"},[n("  "),s("span",{class:"token property"},'"trims"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token punctuation"},"[")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("      "),s("span",{class:"token property"},'"material"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"minecraft:quartz"'),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[n("      "),s("span",{class:"token property"},'"pattern"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"minecraft:eye"')]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token punctuation"},"}"),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("      "),s("span",{class:"token property"},'"material"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"minecraft:netherite"'),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[n("      "),s("span",{class:"token property"},'"pattern"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"minecraft:spire"')]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"},[n("  "),s("span",{class:"token punctuation"},"]"),n("  ")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"})])])],-1)])),_:1}),a[39]||(a[39]=s("h3",{id:"creating-an-accessory",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#creating-an-accessory"},[s("span",null,"Creating an Accessory")])],-1)),a[40]||(a[40]=s("p",null,"Accessories are visually displayed items that are not considered armor, such as capes.",-1)),o(c,{id:"97",data:[{id:"Cape"},{id:"Skull"},{id:"Snorkel"},{id:"Shield"},{id:"Glider"},{id:"Wrapped"}],"tab-id":"accessories-simple"},{title0:t(({value:e,isActive:p})=>a[23]||(a[23]=[n("Cape")])),title1:t(({value:e,isActive:p})=>a[24]||(a[24]=[n("Skull")])),title2:t(({value:e,isActive:p})=>a[25]||(a[25]=[n("Snorkel")])),title3:t(({value:e,isActive:p})=>a[26]||(a[26]=[n("Shield")])),title4:t(({value:e,isActive:p})=>a[27]||(a[27]=[n("Glider")])),title5:t(({value:e,isActive:p})=>a[28]||(a[28]=[n("Wrapped")])),tab0:t(({value:e,isActive:p})=>a[29]||(a[29]=[s("div",{class:"language-json","data-highlighter":"prismjs","data-ext":"json","data-title":"json"},[s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{class:"token property"},'"minecraft:rabbit_hide"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("  "),s("span",{class:"token property"},'"accessories"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token property"},'"cape"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("      "),s("span",{class:"token property"},'"texture_location"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"csr:textures/entity/clay_soldier/paper_cape.png"'),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[n("      "),s("span",{class:"token property"},'"color"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token number"},"8339378"),n(),s("span",{class:"token comment"},"// Optionally we could add a color.")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"},[n("  "),s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"})])])],-1)])),tab1:t(({value:e,isActive:p})=>a[30]||(a[30]=[s("div",{class:"language-json","data-highlighter":"prismjs","data-ext":"json","data-title":"json"},[s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{class:"token property"},'"minecraft:skeleton_skull"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("  "),s("span",{class:"token property"},'"accessories"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token property"},'"skull"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("      "),s("span",{class:"token property"},'"item"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"minecraft:skeleton_skull"')]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"},[n("  "),s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"})])])],-1)])),tab2:t(({value:e,isActive:p})=>a[31]||(a[31]=[s("div",{class:"language-json","data-highlighter":"prismjs","data-ext":"json","data-title":"json"},[s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{class:"token property"},'"accessories"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("  "),s("span",{class:"token property"},'"snorkel"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"csr:textures/entity/clay_soldier/bamboo_stick.png"'),n(),s("span",{class:"token comment"},"// <- Texture of the Snorkel")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"})])])],-1)])),tab3:t(({value:e,isActive:p})=>a[32]||(a[32]=[s("div",{class:"language-json","data-highlighter":"prismjs","data-ext":"json","data-title":"json"},[s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{class:"token property"},'"accessories"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("  "),s("span",{class:"token property"},'"shield"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"csr:textures/entity/clay_soldier/clay_shield.png"')]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"})])])],-1)])),tab4:t(({value:e,isActive:p})=>a[33]||(a[33]=[s("div",{class:"language-json","data-highlighter":"prismjs","data-ext":"json","data-title":"json"},[s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{class:"token property"},'"accessories"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("  "),s("span",{class:"token property"},'"glider"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"minecraft:rabbit_hide"'),n(),s("span",{class:"token comment"},"// <- the Item we use as a Glider")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"})])])],-1)])),tab5:t(({value:e,isActive:p})=>a[34]||(a[34]=[s("div",{class:"language-json","data-highlighter":"prismjs","data-ext":"json","data-title":"json"},[s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{class:"token property"},'"accessories"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("  "),s("span",{class:"token property"},'"string"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"csr:textures/entity/clay_soldier/wrapped.png"')]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"})])])],-1)])),_:1})])}const f=u(m,[["render",y],["__file","items.html.vue"]]),j=JSON.parse('{"path":"/create-items/items.html","title":"Custom Items","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Creating Items That Soldiers Can Hold","slug":"creating-items-that-soldiers-can-hold","link":"#creating-items-that-soldiers-can-hold","children":[]},{"level":2,"title":"Example: Adding a Stick","slug":"example-adding-a-stick","link":"#example-adding-a-stick","children":[]},{"level":2,"title":"Creating Items That Soldiers Can Wear","slug":"creating-items-that-soldiers-can-wear","link":"#creating-items-that-soldiers-can-wear","children":[{"level":3,"title":"Example","slug":"example","link":"#example","children":[]},{"level":3,"title":"Adding Armor Trims","slug":"adding-armor-trims","link":"#adding-armor-trims","children":[]},{"level":3,"title":"Creating an Accessory","slug":"creating-an-accessory","link":"#creating-an-accessory","children":[]}]}],"git":{"updatedTime":1746885425000,"contributors":[{"name":"XcraX1","email":"lego_master@web.de","commits":1}]},"filePathRelative":"create-items/items.md"}');export{f as comp,j as data};
