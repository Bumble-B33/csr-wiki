import{_ as o,c as i,f as r,a,b as t,e as n,r as p,o as d,d as l}from"./app-CBFKTYkr.js";const m={};function c(u,e){const s=p("RouteLink");return d(),i("div",null,[e[10]||(e[10]=r(`<h1 id="creating-your-own-items" tabindex="-1"><a class="header-anchor" href="#creating-your-own-items"><span>Creating Your Own Items</span></a></h1><h2 id="pack-layout" tabindex="-1"><a class="header-anchor" href="#pack-layout"><span>Pack Layout</span></a></h2><p>Before diving into creating custom items, you should have a basic understanding of how resource packs and data packs are structured, particularly the directory layout from the root folder to the <code>/data/</code> directories. You can refer to the corresponding <a href="https://minecraft.wiki/w/Data_pack" target="_blank" rel="noopener noreferrer">Minecraft Wiki</a> page for more information on setting up data packs.</p><p>To add custom items for Clay Soldiers to hold, wear, or interact with, you&#39;ll be working with a data pack that modifies <a href="https://docs.neoforged.net/docs/resources/server/datamaps/" target="_blank" rel="noopener noreferrer">NeoForge’s Data Maps</a>.</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">└─ data</span>
<span class="line">   └─ <span class="token punctuation">(</span>your data pack name<span class="token punctuation">)</span></span>
<span class="line">      ├─ data-maps</span>
<span class="line">      │  ├─ item</span>
<span class="line">      │  │  ├─ soldier_holdable.json            <span class="token comment"># &lt;- For items that soldiers can hold</span></span>
<span class="line">      │  │  ├─ soldier_wearable.json            <span class="token comment"># &lt;- For items that soldiers can wear</span></span>
<span class="line">      │  │  └─ soldier_poi.json                 <span class="token comment"># &lt;- For interactable items</span></span>
<span class="line">      │  ├─ block</span>
<span class="line">      │  │  └─ soldier_poi.json                 <span class="token comment"># &lt;- For Blocks soldiers can interact</span></span>
<span class="line">      │  └─ entity_type</span>
<span class="line">      │     └─ soldier_vehicle_properties.json  <span class="token comment"># &lt;- Properties for Clay Soldier Mounts</span></span>
<span class="line">      ├─ csr</span>
<span class="line">      │  ├─ clay_teams                          <span class="token comment"># &lt;- For new Clay Soldier Teams </span></span>
<span class="line">      │  │  └─ <span class="token punctuation">..</span>.  </span>
<span class="line">      │  └─ soldier_item_type                   <span class="token comment"># &lt;- For new Soldier Item Set Types   </span></span>
<span class="line">      │     └─ <span class="token punctuation">..</span>.</span>
<span class="line">      └─ tags</span>
<span class="line">         └─ item</span>
<span class="line">            └─ <span class="token punctuation">..</span>.        </span>
<span class="line"></span></code></pre></div>`,5)),a("ul",null,[a("li",null,[t(s,{to:"/create-items/items.html"},{default:n(()=>e[0]||(e[0]=[l("Adding new Items and Armor")])),_:1})]),a("li",null,[t(s,{to:"/create-items/pois.html"},{default:n(()=>e[1]||(e[1]=[l("Adding interactable Items/Blocks")])),_:1})]),a("li",null,[t(s,{to:"/create-items/teams.html"},{default:n(()=>e[2]||(e[2]=[l("Adding new Teams")])),_:1})]),a("li",null,[t(s,{to:"/create-items/itemsettypes.html"},{default:n(()=>e[3]||(e[3]=[l("Modifying Item Set Types")])),_:1})]),a("li",null,[t(s,{to:"/create-items/tags.html"},{default:n(()=>e[4]||(e[4]=[l("Tags")])),_:1})]),a("li",null,[t(s,{to:"/create-items/vehicle_properties.html"},{default:n(()=>e[5]||(e[5]=[l("Modifying Soldier Mounts Properties")])),_:1})]),a("li",null,[t(s,{to:"/create-items/example.html"},{default:n(()=>e[6]||(e[6]=[l("Examples")])),_:1})])]),e[11]||(e[11]=a("hr",null,null,-1)),a("ul",null,[a("li",null,[t(s,{to:"/create-items/holdable-values.html"},{default:n(()=>e[7]||(e[7]=[l("Item Properties")])),_:1})]),a("li",null,[t(s,{to:"/create-items/soldier-properties.html"},{default:n(()=>e[8]||(e[8]=[l("Soldier Attributes")])),_:1})]),a("li",null,[t(s,{to:"/create-items/common-values.html"},{default:n(()=>e[9]||(e[9]=[l("Commonly used Values")])),_:1})])])])}const k=o(m,[["render",c],["__file","index.html.vue"]]),h=JSON.parse('{"path":"/create-items/","title":"Creating Your Own Items","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Pack Layout","slug":"pack-layout","link":"#pack-layout","children":[]}],"git":{"updatedTime":1746885425000,"contributors":[{"name":"XcraX1","email":"lego_master@web.de","commits":1}]},"filePathRelative":"create-items/readme.md"}');export{k as comp,h as data};
